




자신의 아이디어나 생각을 시각화 -> 동료들 협업에 중요


1. 여러가지 아이디어가 필요한 상황들
2. 아이디어 표현하는 방법
3. 아이디어를 서비스 수준으로 구체화
4. 아이디어 시각화 도구들
5. 추천하는 아이디어 시각화 방법
6. 관련 개발자 도구 알아보기



1. 여러가지 아이디어가 필요한 상황들
{
새 서비스 만들때
돈이 푸족할때
문제가 터졌을때...
}

- 새로운 제품 또는 서비스 개발
- 새로운 기능 추가
- 새로운 마케팅 프로그램
- 기존 제품 도는 서비스 수정
- 업무 절차 수정

2. 아이디어를 표현하는 간단한 방법들
{
고객이랑 수다 떨다가 고민을 듣는 것 -> pain point 탐색
유사한 것을 찾는 것.
}

- 서비스나 제품의 모양을 그려보는것.
- 서비스 흐름을 그려보기
- 상태 전이를 그려보기 -> 서비스, 제품에는 상태가 존재함.
- 누가 사용자 또는 고객인가?

제품 또는 서비스 모양 그려보기

냅킨, 노트, 연습장, 화이트보드에 그리기

UML - 플로우 차트를 그리기 

UML - State Diagram

Actor -> Use Case
액터 정의, 엑터별 사용 케이즈 파악하기

3. 아이디어를 서비스 수준으로 구체화
- 고객 시나리오
- MVP Minimum Viable Product => 최소 기능 제품 정의
{
최소 기능 제품(Minimum Viable Product, MVP)는 고객의 피드백을 받아 최소한의 기능(features)을 구현한 제품이다. 
초기의 MVP는 파워포인트 슬라이드, 비디오, 데모와 같이 단순한 표현으로 정의 될 수 있다.

그니까 내가 만들려고 한 초기 자동할당을 말하는 거잖아?

초기모델, 핵심기능에 집중, 시장 검증, 반복적 개선을 위한 피드백에 활용, 자원의 효율적 사용, 시장과 제품에 대한 신속한 학습
}
- PRD Product Requirement Document => 제품 요구사항 운영서
{
제품을 만들거나 업데이트하기 위해 기능을 기획하는 단계에서 요구사항을 개괄적으로 설명하는 문서로, 
제품 개발 프로세스 전반에 걸쳐 필수적인 중요 문서입니다.
}
- 1 Pager -> 1장짜리 문서 만들기
- 보도 자료 포맷
- 3 Whys -> 서비스 제품의 핵심과 실제 접근하는 방법
{
뭐야 강사 잘못 알았나 본데? 3whys가 아니라 5whys인데?

문제의 원인을 알기 위해 계속해서 why라는 질문을 던짐 -> 5번 정도 계속 던져서,
횟수에 크게 의미가 있는건 아님
토요타에서 고안했다네

심리적 이유로 반복해서는 안됌.
}



고객 시나리오
- 고객의 전체 여정
- 시작부터 끝까지  -> 고객이 겪에 되는 대부분의 상황을 나태낼 수 있음...?

MVP -> 린 스타트업에서 나온 용어
린스타트업
아이디어를 빠르게 제품화하고, 고객의 반응을 피드백 반영해서 지속적으로 제품을 개선해나가는 경영 방법론

MVP 최소의 기능만 갖춘것. 처음부터 완벽한 자동차 제공 X
=> 긱보드 -> 자전거 -> 오토바이 -> 자동차

작은 규모의 팀에서.

가설 고객 테스트


요구사항과 이에 대한 효과를 표현하는 방법
- 배경
- 목표
- 사용자 스토리
- UX 원칙
- 주요 지표
- 개발 계획
- FAQ

요건증서라고도 함.


원 페이저 => 서비스나, 기능을 종이 한장에 표현
- 목적
- 배경
- 고객은 왜 우리를 고용했는가?
- 원칙
- 주요 지표
- 개발 계획
- FAQ

너무 장황하지 않고 꼭 필요한것만
누구나? 이거를 보면 왜 필요한지 알아?
=> 현실에 잘 작용 못할거 같은거 기분탓인가?
=> 보고 휙 하고 집어 던진다음에, 다음에 만났을때 봤냐고 물으면 까먹을거 처럼 생겼는데?

제품이 복잡한데, 쉽게 표현이 되나?

아무리 설명이 복잡해도, 필요하면 필요한 쪽에서 공부해서 쓰게 되어 있을거 같은데?



보도 자료 포맷
- 자신의 서비스가 신문이나 뉴스에 TV에 나오는 것을 가정

어떻게 나오길 바라는지!

제목, 부제목, 새로운 기능 등 세부적인 내용. 고객이 받을 수 있는 혜택, 담당 책임자의 말



Whys

여러번 왜 라는 질문을 해본다.
- 왜 고객은 이 기능을 사용해야 하는가?
- 왜 고객은 이 서버스/제품를 사용해야 하는가?
- 목적, 대의, 신념, 방향?
- 문제의 핵심에 도달

WHAT ( HOW {WHY} )

명확하지 않으면, 시간, 비용 등의 자원 투입전 생각해봐야.


아이디어 시각화 기본 도구
- 오프라인 도구
- 온라인 도구

#강사가 동료들에게 추천하는 것들#

자신의 생각을 표현하는 방법은 다양하다. -> 익숙하지 않을떄 : ppt 잘 못쓰는데 억지로 ppt로 표현해야 함.
{
메모장, 에디터에 글로, 혹은 마크다운 으로 한 다음 시각화 도구
}
도구가 생각을 방해하면 안된다. (단순한 것이 최고다!)
편집이 생각을 방해하면 안된다. (선 기록, 후 편집)

아이디어 -> 표현 -> 편집
유튜브 같네 ㅋㅋ


오프라인 도구

냅킨
포스트잇
노트 또는 메모장
화이트 보드


제프 베조스가 넵킨에 낙서한 플라이 휠 전략
{
"이렇게 구상하세요" 제프 베조스의 사업개발 씽킹
플라이휠(Flywheel)이란 무엇인가?

플라이휠은 자체 운동 에너지를 사용하여 계속 움직이도록 특별히 설계된 무겁고 회전하는 디스크 또는 휠로, 
기관차나 트랙터와 같이 엄청난 힘이 필요한 중장비에 지속적인 추진력을 제공하는 데 사용됩니다. 

플라이휠의 무게로 인해 일반적으로 정지 상태에서 이동하려면 많은 노력이 필요합니다. 
그러나 한번 회전하기 시작하면 자체 에너지를 저장하고 재분배하여 추진력을 구축하는 데 도움이 됩니다. 
플라이휠은 일단 움직이면 멈추기가 어렵습니다. 

아마존은 창업 7년 차에 3조의 매출을 올리면서도 1.5조의 순손실을 기록하면서 
투자자들의 불만과 시장으로부터는 조만간 파산할 것이라는 위기 속에 있었습니다.

이 때 베조스는 “좋은 기업을 넘어 위대한 기업으로“의 저자로 유명한 짐 콜린스 교수를 회사로 초청해 자문을 구했습니다. 
짐 콜린스 교수는 마침 ‘플라이 휠’이라는 효과를 자신의 책에 소개하고 있던 터라 베조스에게 해당 내용을 전했습니다.

"플라이 휠 효과는 자동차의 기계 장치인 플라이 휠이 처음에 움직이기 위해서는 엄청난 힘이 필요하지만 한번 가속도를 
얻으면 스스로 돌아가며 에너지를 저장하고, 스스로 움직이게 됩니다. 이 원리를 기업에 적용하면, 
처음에는 움직이는 것조차 힘든 일들을 일관된 방향으로 계속 진행하다 보면 언젠가 스스로 돌아가는 힘을 발휘합니다.”

저비용 구조를 만드록 -> 더 낮은 가격을 만들면 이게 더 나은 고객 경험으로 이어지고 -> 성장 -> 판매자들 -> 다양한 상품군
-> 고객경험의 사이클을 만들게 된다...

이게 내가 했던 자동할당 시스템이네...

}


가장 추천 하는 오프라인 도구 -> 화이트 보드
시발... 이걸 나 혼자 썼었네...



온라인 도구
- 파워 포인트
- 엑셀
- balsamiq 발사믹 : 웹사이트, 모바일에 대한 아이디어를 시각화, 프로토타입이나, look up? 목각?을 할때 사용한다고 강사가 말함
- figma 이건 여러번 이름 들어봄 : 가장 인기 있음
- lucid chart : 강사가 많이 씀.
- mermaid : 특별한 설치 필요 없음 uml


1. 오프라인 도구로 생각을 모으로 정리
- 메모장 포스트잇 화이트보드

2. 온라인으로 표현
- 루시드 차트 머메이드

작은 업무부터, 복잡한 업무까지 


화이트보드 - 학습 곡선이 없고, 공동 작업 가능

루시드 차트
- 유료로 구매해야 함 ㅡㅡ
- 공유 쉬움

머메이드
- 마크 다운 스타일 쉽지만 공부는 필요
- 노션, 깃허브 등과 연동 가능
- 온라인 라이브 에디터 제공

flowchart LR
어쩌구 치면 플로우 차트 나옴.



####02. 아이디어 시각화 도구
1. 루시드 차트 # 8년이상 쓰는 중
2. 머메이드




루시드 차트
- UML
- 객체 관계, 객체 상호 작용
- 도메인 분석 및 설계, 업무 분석, 시스템 분석
- 상태 전이
- 동료와 협업과 공유
- 다른 도구와 통합.

드래그엔 드롭으로 도형 사용


시각화 후 동료들과 공유
다른 도구와 쉽게 통합

시각화 -> 소통


주요 기능
1. 기본 도형 제공 (이거만 잘써도 좋다!) UML 기반
- 도메이 ㄴ분석 절차 구성, 프롤우 차트 , ERD

2. 아키텍처 설계 -> 빅테크 기업
- 클라우드 설계 에 대한 템플릿 (AWS, Azure, GCP) , 네트워크

3. 마인드 맵
4. 조직 구성도
5. 공유 및 협업하기
6. 내보내기
7. 그 외 수많은 템플릿

UML 기반 시각화 템플릿 제공
1. 기본 도형
2. 플로우 차트
3. 클래스 다이어그램
4. 시퀀스 다이어그램
5. 상태(State/Activity)
6. 유스케이스 (Use Case)
7. ERD (Entity Relationship Diagram)

나 전부터 이런거에 대한 필요가 좀 있었음.

뭔 도구를 써야 되는지 몰라서 넘어간거지.


AWS 아이콘 같이 시스템 구성도 템플릿도 제공한다.

ppt 집어 치우고 이거 쓰자.


사이트 -> 웹사이트 맵, 모바일 앱 서비스 맵
이런거 만들 수 있음

로그인 버튼 누르면 뭐 나온다던지 이런거


타사 벤치 마킹 할때 많이 씀
경쟁사의 서비스를 분석해서 우리 서비스로 녹여내기

엔티티의 정의



머메이드
- 플로우 차트
- 시퀀스 다이어그램
- 상태 다이어그램
- 파이 차트
- 다른 도구와 통합
  - 노션
  - 깃허브

루시드 차트 하위 호환?


플로우 차트 기본 문법

flowchart
방향
화살표
노드

차트 방향
TB - top to bottom
TD top-dow // same as top to bottom
RL
LR

flowchart LR
  id1(안녕하세요)

flowchart LR
  id1([안녕하세요])

flowchart LR
  id1[(database)]


flowchart LR
  id1((원형))


sequenceDiagram
->>

-->>
-)

메세지



sequenceDiagram
	소닉 ->> 아트: 안녕하세요.
	아트 ->> 소닉: 네 반갑습니다.

	아트 -) 소닉: 네 반갑습니다.
	아트 -->> 소닉: 네 반갑습니다.

	
sequenceDiagram
	actor 소닉
	actor 아트
	소닉 ->> 아트: 안녕하세요.
	아트 ->> 소닉: 네 반갑습니다.

	아트 -) 소닉: 네 반갑습니다.
	아트 -->> 소닉: 네 반갑습니다.


stateDiagram-v2
	[*] --> 대기
	대기 --> [*]

파이차트

pie title 점심에 먹은 빵의 개수
	"소닉" : 60

머메이드 라이브 에디터


간단한 시각화를 할때는 머메이드


다른 툴과의 통합 - 노션

/Mermaid 라고 치면 코드 블럭이 나옴.

graph TD
	Mermaid --> Diagram

깃허브 문서에서도 가능

깃허브 마크다운 문법에서 사요 ㅇ가능

README.MD에서

```mermaid
flowchart LR
	고객 --> 웹서버 --> 데이터베이스
```


####03. 아이디어 시각화 도구 실습

플로우 차트 그려보기
상태 다이어그램 그려보기
시퀀스 다이어그램 그려보기
사이트 맵 그려보기


루시드 차트 검새갛면 들어갈 수 있음.

무료모델

+ 버튼 눌러 새로 시작

이커머스 고객이 접근해서 구매 -> 플로우차트 그리기
적당한 도형이 없을때 검색하면 쓸만한게 의외로 있음

user라고 치니까 AWS user 아이콘 나옴

결제 후
쌩큐 페이지

상태다이어그램
UML에서 State Diagram

uml state/activity 검색


화살표 더블클릭 화살표에 텍스트

비회원 -> 회원 -> 탈퇴 과정


머메이드

flowchart BT
    고객-->이커머스
    이커머스-->검색
    검색-->검색결과
    검색결과-->상세
    상세-->장바구니
    장바구니-->결제
    결제-->땡큐페이지


sequenceDiagram
    고객->>+이커머스: 주문하기
    이커머스->>-고객: 주문완료
    이커머스->>+배송업체: 배송요청
    배송업체->>-이커머스: 배송접수완료
    배송업체->+고객: 배송
    고객->>-배송업체: 구매확정


stateDiagram-v2
    [*] --> 비회원
    비회원 --> 회원
    회원 --> 와우회원
    와우회원 --> 회원
    와우회원 --> [*]

pie title 오늘의 구매 내역
    "음료수" : 2000
    "과자" : 5000
    "회" : 20000




깃허브 기록까지 실습

깃허브 되는거 보니까

npm에서 그거 하고 싶은데... 자동으로 일지 남는거


공부 상황 readme 에 차트로 넣어도 괜찮을거 같은데?

마무리 요약....
- 혼자 개발하는 것보다 협업을 많이 한다. 에휴...
- 무엇보다 중요한것 -> 애자일 소프트웨어 개발선언
 + 공정과 도구보다 개인과 상호작용을 ==> 이거 때매 이번 학습 한거다 이말이야.
 + 포괄적인 문서보다 작동하는 소프트웨어를
 + 계약 협상보다 고객과의 협력을
 + 계획을 따르기보다 변화에 대응하기를



####0.4 이커머스 서비스 흐름 정의하기






















